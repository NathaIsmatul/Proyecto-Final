--------------HUELLAS DE VIDA ----------

alter session set "_ORACLE_SCRIPT"= true;

CREATE USER HUELLAS_REFUGIO IDENTIFIED BY "Huellas2001";

GRANT CONNECT TO HUELLAS_REFUGIO;
GRANT CREATE SESSION TO HUELLAS_REFUGIO;
GRANT CREATE TABLE TO HUELLAS_REFUGIO;
GRANT CREATE PROCEDURE TO HUELLAS_REFUGIO;
GRANT CREATE VIEW TO HUELLAS_REFUGIO;
GRANT CREATE TRIGGER TO HUELLAS_REFUGIO;
GRANT CREATE SEQUENCE TO HUELLAS_REFUGIO;
GRANT ALTER ANY TABLE TO HUELLAS_REFUGIO;


ALTER USER HUELLAS_REFUGIO DEFAULT ROLE ALL;

CREATE USER VIDA_CRUD IDENTIFIED BY "HuellasVidaCrud2001";

GRANT CREATE SESSION TO VIDA_CRUD;
ALTER USER VIDA_CRUD DEFAULT ROLE ALL;
GRANT CONNECT, RESOURCE TO HUELLAS_REFUGIO;

GRANT CREATE ROLE TO HUELLAS_REFUGIO;
ALTER USER HUELLAS_REFUGIO QUOTA UNLIMITED ON USERS;

--------------------------------------------------TABLESPACES ------------------------------------------------------------------------------------------

-Proceso de Negocios - Generaci√≥n de reportes por medio de joins y contenedores, el reporte tiene que ser en pdf

alter session set "_ORACLE_SCRIPT"= true;

-- CREAR ROLES
CREATE ROLE C##_CRUD_ROL_HUELLAS;
GRANT CONNECT TO C##_CRUD_ROL_HUELLAS;
GRANT CREATE SESSION TO C##_CRUD_ROL_HUELLAS;
CREATE ROLE C##_CONSULTAS_HUELLAS;

GRANT CONNECT TO C##_CONSULTAS_HUELLAS;
GRANT CREATE SESSION TO C##_CONSULTAS_HUELLAS;

-------Usuario cliente ------

CREATE TABLE Perfil (
    id NUMBER PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL,
    apellido VARCHAR2(50) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    telefono VARCHAR2(20) NOT NULL
);

CREATE TABLE RegistroMascotas (
    id NUMBER PRIMARY KEY,
    nombreMascota VARCHAR2(50) NOT NULL,
    especie VARCHAR2(50) NOT NULL,
    raza VARCHAR2(50) NOT NULL,
    fechaNacimiento DATE NOT NULL,
    perfilID NUMBER,
    CONSTRAINT fk_perfil_registro FOREIGN KEY (perfilID) REFERENCES Perfil(id)
);

CREATE TABLE Castracion (
    id NUMBER PRIMARY KEY,
    mascotaID NUMBER,
    fechaCastracion DATE NOT NULL,
    veterinario VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_mascota_castracion FOREIGN KEY (mascotaID) REFERENCES RegistroMascotas(id)
);


CREATE TABLE CatalogoAdopciones (
    id NUMBER PRIMARY KEY,
    mascotaID NUMBER,
    edad NUMBER NOT NULL,
    descripcion VARCHAR2(500) NOT NULL,
    CONSTRAINT fk_mascota_catalogo FOREIGN KEY (mascotaID) REFERENCES RegistroMascotas(id)
);


-- Permisos sobre tablas principales
-- Permisos
GRANT SELECT, INSERT, UPDATE, DELETE ON Perfil TO C##_CRUD_ROL_HUELLAS;
GRANT SELECT, INSERT, UPDATE, DELETE ON RegistroMascotas TO C##_CRUD_ROL_HUELLAS;
GRANT SELECT, INSERT, UPDATE, DELETE ON Castracion TO C##_CRUD_ROL_HUELLAS;
GRANT SELECT, INSERT, UPDATE, DELETE ON CatalogoAdopciones TO C##_CRUD_ROL_HUELLAS;

-- Otorgar permisos de SELECT en las tablas a C##_CONSULTAS_COMPRA
GRANT SELECT ON Perfil TO C##_CONSULTAS_HUELLAS;
GRANT SELECT ON RegistroMascotas TO C##_CONSULTAS_HUELLAS;
GRANT SELECT ON Castracion TO C##_CONSULTAS_HUELLAS;
GRANT SELECT ON CatalogoAdopciones TO C##_CONSULTAS_HUELLAS;

